(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{372:function(t,r,e){"use strict";e.r(r);var a=e(28),i=Object(a.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"algorithm-graph-theory"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#algorithm-graph-theory"}},[t._v("#")]),t._v(" Algorithm - Graph Theory")]),t._v(" "),e("p",[t._v("By "),e("a",{attrs:{href:"https://yuweiyin.github.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("YuweiYin"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("strong",[t._v("Max-Flow")])]),t._v(" "),e("h2",{attrs:{id:"目录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),e("ul",[e("li",[t._v("最大流\n"),e("ul",[e("li",[t._v("增广路->Ford-Fulkerson 算法")]),t._v(" "),e("li",[t._v("预推流")]),t._v(" "),e("li",[t._v("Dinic 算法")]),t._v(" "),e("li",[t._v("有上下界限制的最大流")]),t._v(" "),e("li",[t._v("节点有限制的网络流")]),t._v(" "),e("li",[t._v("无向图最小割->Stoer-Wagner 算法")]),t._v(" "),e("li",[t._v("有向图和无向图的边不交路径")]),t._v(" "),e("li",[t._v("Ford-Fulkerson 迭加算法")]),t._v(" "),e("li",[t._v("含负费用的最小费用最大流")])])])])])}),[],!1,null,null,null);r.default=i.exports}}]);