(window.webpackJsonp=window.webpackJsonp||[]).push([[182],{433:function(t,r,e){"use strict";e.r(r);var n=e(28),o=Object(n.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"pydiff-python-结构化程序比较工具"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pydiff-python-结构化程序比较工具"}},[t._v("#")]),t._v(" PyDiff - Python 结构化程序比较工具")]),t._v(" "),e("p",[t._v("2013年07月06日 - "),e("a",{attrs:{href:"http://www.yinwang.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("王垠"),e("OutboundLink")],1)]),t._v(" "),e("p",[e("a",{attrs:{href:"http://www.yinwang.org/blog-cn/2013/07/06/PyDiff-Python%E7%BB%93%E6%9E%84%E5%8C%96%E7%A8%8B%E5%BA%8F%E6%AF%94%E8%BE%83%E5%B7%A5%E5%85%B7",target:"_blank",rel:"noopener noreferrer"}},[t._v("原文链接"),e("OutboundLink")],1)]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("在之前的一篇博文里，我介绍了 "),e("a",{attrs:{href:"http://www.yinwang.org/blog-cn/2013/04/21/ydiff-%E7%BB%93%E6%9E%84%E5%8C%96%E7%9A%84%E7%A8%8B%E5%BA%8F%E6%AF%94%E8%BE%83",target:"_blank",rel:"noopener noreferrer"}},[t._v("ydiff"),e("OutboundLink")],1),t._v("，一个通用的结构化程序比较工具。其实在设计 ydiff 之前，这个工具是用 Python 实现的，并且只处理 Python 程序。在设计了 ydiff 之后，我发现其实我不想费很多精力来写 Python 的 parser，所以对 Python 的支持就日渐疏忽了。后来我把那块代码放在了 ydiff 的 repo 里面（叫做 pydiff.py），然而几乎没有人注意到它。")]),t._v(" "),e("p",[t._v('现在我发现 Python 其实是一个挺重要而且有趣的语言。说它重要是因为它简单而且在某种程度上是优雅的，所以有很多人用它。说它有趣是因为它的一些设计其实比起很多更加“严谨”的语言要来得合理。语言的设计不只要有逻辑的严谨和效率，而且需要有“易用性”（usability）。Python 在易用性上面是做的比较好的。最近仔细看了一下 PEP 8 (Python 的 "Style Guide"），发现它有很多地方比起 Java, Scheme, Haskell 都有让程序更加“易读”的特点。')]),t._v(" "),e("p",[t._v("所以，现在我为这个 Python 的结构化比较程序重新建立了它自己的 GitHub 项目。你可以在这里得到它的代码：")]),t._v(" "),e("p",[t._v("https://github.com/yinwang0/pydiff")]),t._v(" "),e("p",[t._v("对比大型文件的时候可能速度会成一定的问题。不过我打算以后对算法做一个比较大的改进。如果发现 bug 请在 GitHub 中向我报告。谢谢。")]),t._v(" "),e("h2",{attrs:{id:"demo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#demo"}},[t._v("#")]),t._v(" Demo")]),t._v(" "),e("p",[t._v("你可以在"),e("a",{attrs:{href:"http://www.yinwang.org/resources/pydiff1-pydiff2.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("这个窗口"),e("OutboundLink")],1),t._v("中看到 PyDiff 的输出结果，是 PyDiff 对比它自己的代码（我最近两天对它的修改）。")]),t._v(" "),e("p",[t._v("上面的界面有如下特点：")]),t._v(" "),e("ol",[e("li",[t._v("红色表示“删除”，绿色表示“插入”，白色表示“移动”或者没有变化，蓝色表示有小幅度“修改”。")]),t._v(" "),e("li",[t._v("左右窗口同步滚动。")]),t._v(" "),e("li",[t._v("点击白色方框，就可以依据框里的变量进行对齐。")]),t._v(" "),e("li",[t._v("点击之后，左右窗口根据对齐的变量重新“耦合”，同步滚动。")])])])}),[],!1,null,null,null);r.default=o.exports}}]);