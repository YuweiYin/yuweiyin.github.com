(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{302:function(t,r,i){"use strict";i.r(r);var e=i(28),n=Object(e.a)({},(function(){var t=this,r=t.$createElement,i=t._self._c||r;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("h1",{attrs:{id:"algorithm-graph-theory"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#algorithm-graph-theory"}},[t._v("#")]),t._v(" Algorithm - Graph Theory")]),t._v(" "),i("p",[t._v("By "),i("a",{attrs:{href:"https://yuweiyin.github.io/",target:"_blank",rel:"noopener noreferrer"}},[t._v("YuweiYin"),i("OutboundLink")],1)]),t._v(" "),i("p",[i("strong",[t._v("Minimum Spanning Tree")])]),t._v(" "),i("h2",{attrs:{id:"目录"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#目录"}},[t._v("#")]),t._v(" 目录")]),t._v(" "),i("ul",[i("li",[i("RouterLink",{attrs:{to:"/article/info_technology/algorithm/graph_theory/minimum_spanning_tree/minimum-spanning-tree/"}},[t._v("最小生成树 MST")]),t._v(" "),i("ul",[i("li",[t._v("Prim 算法")]),t._v(" "),i("li",[t._v("Kruskal 算法 (稀疏图)")]),t._v(" "),i("li",[t._v("Sollin 算法")]),t._v(" "),i("li",[t._v("次小生成树")]),t._v(" "),i("li",[t._v("第 k 小生成树")]),t._v(" "),i("li",[t._v("最优比例生成树")]),t._v(" "),i("li",[t._v("最小树形图")]),t._v(" "),i("li",[t._v("最小度限制生成树")]),t._v(" "),i("li",[t._v("平面点的欧几里德最小生成树")]),t._v(" "),i("li",[t._v("平面点的曼哈顿最小生成树")]),t._v(" "),i("li",[t._v("最小平衡生成树")])])],1)])])}),[],!1,null,null,null);r.default=n.exports}}]);